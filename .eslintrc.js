module.exports = {
    parser: "@typescript-eslint/parser",
    parserOptions: {
        sourceType: "module",
        project: ["./tsconfig.json"],
    },
    plugins: ["@typescript-eslint"],
    rules: {
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/array-type": "error",
        "@typescript-eslint/ban-types": [
            "error",
            {
                types: {
                    Boolean: {
                        message: "Prefer boolean",
                        fixWith: "boolean",
                    },
                    Function: {
                        message:
                            "Function is an unsafe type, allowing unexpected assignments",
                        fixWith: "() => void",
                    },
                    Number: {
                        message: "Prefer number",
                        fixWith: "number",
                    },
                    String: {
                        message: "Prefer string",
                        fixWith: "string",
                    },
                },
            },
        ],
        "@typescript-eslint/consistent-type-assertions": [
            "error",
            { assertionStyle: "as", objectLiteralTypeAssertions: "never" },
        ],
        "@typescript-eslint/consistent-type-imports": "error",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/prefer-readonly-parameter-types": [
            "error",
            { ignoreInferredTypes: true, treatMethodsAsReadonly: true },
        ],
        "@typescript-eslint/prefer-return-this-type": "error",
        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/switch-exhaustiveness-check": "error",
        "@typescript-eslint/type-annotation-spacing": "error",
        "@typescript-eslint/unified-signatures": "error",
        "arrow-body-style": "error",
        "arrow-parens": ["error", "as-needed"],
        complexity: "off",
        "constructor-super": "error",
        curly: "error",
        "dot-notation": "error",
        "eol-last": "error",
        "guard-for-in": "error",
        "linebreak-style": "off",
        "max-classes-per-file": "off",
        "new-parens": "off",
        "newline-per-chained-call": "off",
        "no-bitwise": "off",
        "no-caller": "error",
        "no-cond-assign": "error",
        "no-console": "error",
        "no-debugger": "error",
        "no-empty": "error",
        "no-eval": "error",
        "no-extra-semi": "off",
        "no-fallthrough": "off",
        "no-invalid-this": "off",
        "no-irregular-whitespace": "off",
        "no-multiple-empty-lines": "off",
        "no-new-wrappers": "error",
        "no-throw-literal": "error",
        "no-undef-init": "error",
        "no-unsafe-finally": "error",
        "no-unused-labels": "error",
        "no-var": "error",
        "object-shorthand": "error",
        "prefer-const": "error",
        "quote-props": "off",
        radix: "error",
        "space-before-function-paren": "off",
        "use-isnan": "error",
        "valid-typeof": "error",
    },
    overrides: [
        {
            files: ["Seq.ts", "AsyncSeq.ts", "index.ts"],
            rules: {
                "@typescript-eslint/explicit-module-boundary-types": [
                    "error",
                    {
                        allowArgumentsExplicitlyTypedAsAny: true,
                    },
                ],
            },
        },
        {
            files: ["*.spec.ts"],
            rules: {
                "@typescript-eslint/no-explicit-any": "off",
                "@typescript-eslint/no-floating-promises": "off",
                "@typescript-eslint/prefer-readonly-parameter-types": "off",
                "@typescript-eslint/restrict-plus-operands": "off",
            },
        },
        {
            files: ["scripts/*"],
            rules: {
                "no-console": "off",
            },
        },
    ],
}
